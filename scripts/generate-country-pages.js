#!/usr/bin/env node

/**
 * Country Pages Generator - Main Script (Refactored)
 * 
 * This script generates country-specific pages for visa sponsorship companies.
 * It processes company data and creates organized country pages with detailed
 * information about companies, industries, and visa opportunities.
 * 
 * @author Generated by refactoring script
 * @version 2.0.0
 */

const fs = require('fs');
const path = require('path');

// Import modules
const { DETAILED_COUNTRIES } = require('./constants');
const { getCountryConfig, getCurrentDate, getCountryFilename } = require('./utils');
const { generateDetailedCountryPage, generateSimpleCountryPage } = require('./page-templates');
const { writeCountriesIndexPage } = require('./index-page-generator');
const { updateMainReadme } = require('./readme-updater');

/**
 * Load and prepare company data
 * @returns {Object} Companies data with updated metadata
 */
function loadCompaniesData() {
  console.log('📖 Reading companies.json...');
  const companiesData = JSON.parse(fs.readFileSync('data/companies.json', 'utf8'));
  const { companies, metadata } = companiesData;
  
  // Update metadata with current date
  const currentDate = getCurrentDate();
  metadata.last_updated = currentDate;
  
  // Write back updated metadata
  companiesData.metadata = metadata;
  fs.writeFileSync('data/companies.json', JSON.stringify(companiesData, null, 2));
  console.log(`📅 Updated last_updated to: ${currentDate}`);
  
  return { companies, metadata };
}

/**
 * Ensure output directory exists
 * @param {string} outputDir - Directory path to create
 */
function ensureOutputDirectory(outputDir) {
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }
}

/**
 * Generate a single country page
 * @param {string} countryKey - Country key identifier
 * @param {Array} countryCompanies - Companies for this country
 * @param {Object} metadata - Global metadata
 * @param {string} outputDir - Output directory path
 * @returns {string} Generated filename
 */
function generateSingleCountryPage(countryKey, countryCompanies, metadata, outputDir) {
  const config = getCountryConfig(countryKey);
  
  // Use detailed template for major countries, simple for others
  const isDetailedCountry = DETAILED_COUNTRIES.includes(countryKey);
  const content = isDetailedCountry 
    ? generateDetailedCountryPage(countryKey, countryCompanies, config, metadata)
    : generateSimpleCountryPage(countryKey, countryCompanies, config, metadata);
  
  // Generate filename and write file
  const filename = getCountryFilename(countryKey);
  const filepath = path.join(outputDir, `${filename}.md`);
  
  fs.writeFileSync(filepath, content);
  console.log(`✅ Generated: ${filename}.md (${countryCompanies.length} companies)`);
  
  return filename;
}

/**
 * Generate all country pages
 * @param {Object} companies - Companies grouped by country
 * @param {Object} metadata - Global metadata
 * @returns {number} Number of pages generated
 */
function generateAllCountryPages(companies, metadata) {
  console.log('🏗️  Generating country pages...');
  
  const outputDir = 'docs/countries';
  ensureOutputDirectory(outputDir);
  
  let pagesGenerated = 0;
  
  Object.entries(companies).forEach(([countryKey, countryCompanies]) => {
    generateSingleCountryPage(countryKey, countryCompanies, metadata, outputDir);
    pagesGenerated++;
  });
  
  return pagesGenerated;
}

/**
 * Print generation summary
 * @param {number} pagesGenerated - Number of pages generated
 * @param {Object} metadata - Global metadata
 */
function printSummary(pagesGenerated, metadata) {
  console.log(`🎉 Successfully generated ${pagesGenerated} country pages!`);
  console.log(`📊 Total companies: ${metadata.total_companies}`);
  console.log(`🌍 Total countries: ${metadata.countries}`);
}

/**
 * Main generation function
 */
function generateCountryPages() {
  try {
    // Load and prepare data
    const { companies, metadata } = loadCompaniesData();
    
    // Generate all pages
    const pagesGenerated = generateAllCountryPages(companies, metadata);
    
    // Generate index page
    writeCountriesIndexPage(companies, metadata);
    
    // Update main README.md
    updateMainReadme(companies, metadata);
    
    // Print summary
    printSummary(pagesGenerated, metadata);
    
  } catch (error) {
    console.error('❌ Error generating country pages:', error.message);
    process.exit(1);
  }
}

/**
 * Script execution entry point
 */
if (require.main === module) {
  generateCountryPages();
}

module.exports = { generateCountryPages };
